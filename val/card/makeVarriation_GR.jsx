/*GRの限界突破バリエーションを自動的に生成します。ディレクトリを選択すると、名前が[5桁の数字.psd]のファイル全てにスクリプトを実行します。wrote by IKOYAMA*/var folderObj = Folder.selectDialog("フォルダ選択");var fileList = [];                                          //フォルダ内のpsd置き場var tempList = folderObj.getFiles("*.psd");    var targetLayerName = [];                           //限界突破レイヤーの名前置き場var document;var layers;var maxEvo = 20;//限界突破数//d0〜d20のレイヤー名を生成for(i = 0; i <= maxEvo; i++){    var layer_name = "d" + i;    targetLayerName.push(layer_name);    }getFolderObj();//フォルダ内のpsdファイルを取得function getFolderObj(){    if (folderObj != null) {        for (var i = 0; i < tempList.length; i++) {            var obj = tempList[i];            if (/^\d{5}$/.test(getName(obj))) {                fileList.push(obj);            }        }        main();    } else {        alert("psdファイルの入ったフォルダを選択してください。");    }}//レイヤーの表示を切り替えたり他の関数使ったりしているメイン処理。function main() {    for (var f = 0; f <= fileList.length - 1; f++) {        var fileObj = new File(fileList[f]);        open(fileObj);                              document = activeDocument;        layers = document.layers;                 targetLayer = getLayer(layers);        getLayer(layers);        //alert("targetLayer=",targetLayer);                        for (var i = 0; i <= maxEvo; i++) {            for(var j = 0; j <= targetLayer.length; j++){                if(targetLayer[j].name ==  targetLayerName[i]){                    targetLayer[j].visible = true;                    saveFile(fileObj, i);                    targetLayer[j].visible = false;                    targetLayer.splice(j,1);                    break;                }            }        }            reset();        activeDocument.close(SaveOptions.DONOTSAVECHANGES);    }    alert("完了しました");}//targetLayerに限界突破のレイヤーを入れるfunction getLayer (_layers) {     var targetLayer = [];   //限界突破レイヤーの置き場    for (var i = 0; i < layers.length; i++) {        var layer = _layers[i];        if(layer){            if (layer.typename == "LayerSet") {                //getLayer(layer.layers);                alert("LayerSet");                alert("layer.layers =", layer.layers);                alert("layer.layerSets = ",layer.layerSets);                alert("layer.artLayers = ",layer.artLayers);            } else if (targetFlag(layer.name)) {                targetLayer.push(layer);                layer.visible=false;                            } else{                //alert("フレームかイラストか背景のレイヤー");            }        }    }    return targetLayer;}//限界突破用のレイヤーかどうか判定function targetFlag(_layerName) {     var num = targetLayerName.length;    for (var i = 0; i < num; i++) {        var bool = (_layerName == targetLayerName[i]);        if (bool) {            return true;            break;        }    }    return false;}//ファイル名の末尾に限界突破数を追加して別名保存function saveFile(_fileObj, _i) {    var psdOpt = new PhotoshopSaveOptions();    var fname = getName(_fileObj);    savefile = new File(folderObj.fsName + "/" + fname + _i + ".psd");    activeDocument.saveAs(savefile, psdOpt, true, Extension.LOWERCASE);}//psdファイル名を取得function getName(_fileObj) {    var di = (_fileObj.name).lastIndexOf("."); //　fileObj.nameの値で"."の位置を取得    var name = (_fileObj.name).substr(0, di);    return name;}function reset() {    document = null;    layers = null;    targetLayer.length = 0;}