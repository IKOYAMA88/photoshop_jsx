/*****************************************************************【概要】大砲のaiから、パーツを書き出すスクリプトです。illustrator用です。【使い方】【1】大砲のデータは"大砲ID.ai"にリネームし、1フォルダにまとめる。【2】illustratorを起動し、ファイル > スクリプト > その他のスクリプト から、このjsxを選択。【3】大砲データの入っているディレクトリを選択すると、一斉に書き出される。【4】photoshopでリサイズし、gitにプッシュする。【オプション】・saveAllをfalseにすると大砲固有の顔・髪・頭のみ書き出しできます。っていうのを消した。【注意】・レイヤー名が間違っているとうまく動きません。・後頭部、尻尾がない大砲の場合、デフォルトのデータを必ず削除してから実行して下さい。****************************************************************2013.12.20 IKOYAMA2013.12.22 大砲IDの構造変更に基づき、一部変数の抽出方法変更2014.12.3 大砲書き出し用に改造。不要な変数やスクリプトは面倒だから残した*****************************************************************/var doc;var layers;var activeLayer;var artBoards;//書き出し時の命名に必要なやつらvar ID;var seriesID;//使ってないvar gender;//使ってないvar gunORsword;//使ってないvar rootFolder ;var options = new ExportOptionsPNG24();options.antiAliasing = true;options.transparency = true;options.artBoardClipping = true;options.verticalScale = 100;options.horizontalScale = 100;//大砲用var nameObj = [    {layerName:"【完成】足", folderName : "foot", type:"other",addName:"1010"},    {layerName:"【完成】砲頭", folderName : "head", type:"other",addName:"1020"},        {layerName:"【完成】砲身", folderName : "body", type:"other",addName:"1030"},    ];/********************************************************/main();function main(){       rootFolder = Folder.selectDialog("フォルダ選択");    var fileList = new Array;    fileList = rootFolder.getFiles("*.ai");    for(var i=0; i<fileList.length; i++){        open(fileList[i]);        doc = activeDocument;        layers = activeDocument.layers;                artBoards = doc.artboards;        artBoards.setActiveArtboardIndex(1);//上から二枚目のアートボードを選択        separateFileName();                for(var j=0; j<layers.length; j++){            pickLayer(layers[j]);            saveFile();                    }        doc.close(SaveOptions.DONOTSAVECHANGES);        refreshVariable();    }}/********************************************************///いろんな変数に値を突っ込むfunction separateFileName(){    ID = doc.name.split(".")[0];        seriesID = ID.slice(0,4);    gender = ID.slice(-1);            var tempGoS = ID.slice(4,6);    if(tempGoS=="10"||tempGoS=="11"||tempGoS=="12"){       gunORsword = "gun";    }else{       gunORsword = "sword";    }}function refreshVariable(){    doc = null;    layers = null;    ID = null;    seriesID = null;    gender  = null;    gunORsword = null;}//レイヤーを一枚だけ表示するfunction pickLayer(_layer){    activeLayer = _layer;    vanishLayers();    activeLayer .visible = true;}//全レイヤーを非表示にfunction vanishLayers(){    for(var i=0; i<layers.length; i++){        layers[i].visible = false;    }    }//保存するfunction saveFile(){    var obj = convertName(activeLayer.name);//nameObjから該当のオブジェクトを取得    var savePath;    var saveFile;    var saveFolder ;    if(obj){        //if(obj.type == "protector" && saveAll){        /*if(obj.type == "protector"){ //アバター書き出し用。消すの面倒だから残しておく            savePath = String(rootFolder + String(obj.type + seriesID + "_" + gunORsword + "_" + gender));            saveFile = new File(savePath +"/"+obj.folderName+".png");             saveFolder = new Folder(savePath);            saveFolder.create();            doc.exportFile(saveFile,ExportType.PNG24,options);           }else if(obj.type == "other"){*/            savePath = String(rootFolder + "/"+obj.folderName);            saveFolder = new Folder(savePath);            saveFolder.create();                        saveFile = new File(savePath+"/"+ obj.addName +ID+".png");                         doc.exportFile(saveFile,ExportType.PNG24,options);           //}                              }}//レイヤー名を受け取って該当のnameObjを返すfunction convertName(_name){    for(var i=0; i<nameObj.length; i++ ){        if(_name == nameObj[i].layerName){            return nameObj[i];                        break;         }    }    return false;}