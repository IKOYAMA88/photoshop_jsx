/************************************************************【概要】    psdファイルを開いた状態で実行すると、背景透過のtgaファイルを書き出します。書き出し前にリサイズも可能。***********************************************************///コンストラクタvar doc,docW,docH,filePath,fileName,newPath,win;constructor();function constructor(){    try{        doc = activeDocument;        docW = Number(doc.width);        docH = Number(doc.height);                try{            filePath = doc.path;        }catch(e){            filePath = "~/Desktop";            }                fileName = doc.name.split(".")[0];        newPath = String(filePath + "/" + fileName + ".tga");                createGuiPanel();            }catch(e){        alert("ドキュメントを開いた状態で実行してください");    }}/**************************************************************************************///メイン処理function main(){    deleteChannel();    makeChannel();        doc.resizeImage(Number(win.newHeight.text),Number(win.newWidth.text));    saveTarga(newPath);            //処理を加えた文を全部もとに戻す    for(var i = 0; i <2; i++){        undo();            }}/**************************************************************************************///GUI作成function createGuiPanel(){    win = new Window("dialog","targaで保存",[0,0,220,170]);    var docSize = "元サイズ 横：" + String(docW) + " 縦：" + String(docH);    win.text1 = win.add("statictext",[10,20,300,60],docSize);    win.txtW = win.add("statictext",[10,52,30,70],"横");    win.newWidth = win.add("edittext",[30,50,70,70],docW);    win.px1 = win.add("statictext",[75,50,110,70],"px");    win.txtH = win.add("statictext",[110,52,130,70],"縦");    win.newHeight = win.add("edittext",[130,50,180,70],docH);    win.px2 = win.add("statictext",[185,50,300,70],"px");    win.button1 = win.add("button",[40,100,160,120],"実行する");    win.button2 = win.add("button",[60,130,140,150],"キャンセル");    win.button1.onClick = function(){        win.close();        main();    }    win.button2.onClick = function(){        win.close();    }   win.newWidth.onChanging = function(){       win.newHeight.text = String(docH * Number(win.newWidth.text) / docW);       }   win.newHeight.onChanging = function(){       win.newWidth.text = String(docW * Number(win.newHeight.text) / docH);   }   win.show();}//targaで保存function saveTarga(_newPath){    var idsave = charIDToTypeID( "save" );    var desc17 = new ActionDescriptor();    var idAs = charIDToTypeID( "As  " );    var desc18 = new ActionDescriptor();    var idBtDp = charIDToTypeID( "BtDp" );    desc18.putInteger( idBtDp, 32 );    var idCmpr = charIDToTypeID( "Cmpr" );    desc18.putInteger( idCmpr, 1 );    var idTrgF = charIDToTypeID( "TrgF" );    desc17.putObject( idAs, idTrgF, desc18 );    var idIn = charIDToTypeID( "In  " );    desc17.putPath( idIn, new File(_newPath) );    var idDocI = charIDToTypeID( "DocI" );    desc17.putInteger( idDocI, 1317 );    var idLwCs = charIDToTypeID( "LwCs" );    desc17.putBoolean( idLwCs, true );    var idsaveStage = stringIDToTypeID( "saveStage" );    var idsaveStageType = stringIDToTypeID( "saveStageType" );    var idsaveSucceeded = stringIDToTypeID( "saveSucceeded" );    desc17.putEnumerated( idsaveStage, idsaveStageType, idsaveSucceeded );    executeAction( idsave, desc17, DialogModes.NO );}//undofunction undo(){    var idslct = charIDToTypeID( "slct" );    var desc148 = new ActionDescriptor();        var idnull = charIDToTypeID( "null" );    var ref26 = new ActionReference();    var idHstS = charIDToTypeID( "HstS" );    var idOrdn = charIDToTypeID( "Ordn" );    var idPrvs = charIDToTypeID( "Prvs" );    ref26.putEnumerated( idHstS, idOrdn, idPrvs );    desc148.putReference( idnull, ref26 );    executeAction( idslct, desc148, DialogModes.NO );}//アルファチャンネル作成function makeChannel(){    //選択範囲    var idsetd = charIDToTypeID( "setd" );    var desc3937 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );    var ref1304 = new ActionReference();    var idChnl = charIDToTypeID( "Chnl" );    var idfsel = charIDToTypeID( "fsel" );    ref1304.putProperty( idChnl, idfsel );    desc3937.putReference( idnull, ref1304 );    var idT = charIDToTypeID( "T   " );    var desc3938 = new ActionDescriptor();    var idHrzn = charIDToTypeID( "Hrzn" );    var idPxl = charIDToTypeID( "#Pxl" );    desc3938.putUnitDouble( idHrzn, idPxl, 0.000000 );    var idVrtc = charIDToTypeID( "Vrtc" );    var idPxl = charIDToTypeID( "#Pxl" );    desc3938.putUnitDouble( idVrtc, idPxl, 0.000000 );    var idPnt = charIDToTypeID( "Pnt " );    desc3937.putObject( idT, idPnt, desc3938 );    var idTlrn = charIDToTypeID( "Tlrn" );    desc3937.putInteger( idTlrn, 20 );    var idMrgd = charIDToTypeID( "Mrgd" );    desc3937.putBoolean( idMrgd, true );    var idAntA = charIDToTypeID( "AntA" );    desc3937.putBoolean( idAntA, true );    executeAction( idsetd, desc3937, DialogModes.NO );    // =======================================================        //反転    var idInvs = charIDToTypeID( "Invs" );    executeAction( idInvs, undefined, DialogModes.NO );    // =======================================================        //選択範囲でチャンネル作成    var idDplc = charIDToTypeID( "Dplc" );    var desc4061 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );    var ref1376 = new ActionReference();    var idChnl = charIDToTypeID( "Chnl" );    var idfsel = charIDToTypeID( "fsel" );    ref1376.putProperty( idChnl, idfsel );    desc4061.putReference( idnull, ref1376 );    executeAction( idDplc, desc4061, DialogModes.NO );        // =======================================================        //選択解除    var idsetd = charIDToTypeID( "setd" );    var desc3981 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );    var ref1332 = new ActionReference();    var idChnl = charIDToTypeID( "Chnl" );    var idfsel = charIDToTypeID( "fsel" );    ref1332.putProperty( idChnl, idfsel );    desc3981.putReference( idnull, ref1332 );    var idT = charIDToTypeID( "T   " );    var idOrdn = charIDToTypeID( "Ordn" );    var idNone = charIDToTypeID( "None" );    desc3981.putEnumerated( idT, idOrdn, idNone );    executeAction( idsetd, desc3981, DialogModes.NO );}//余分なアルファチャンネルを削除function deleteChannel(){    if(doc.channels.length <= 4){        doc.channels.removeAll();    }}