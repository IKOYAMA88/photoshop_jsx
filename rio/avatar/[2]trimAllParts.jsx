app.displayDialogs = DialogModes.NO; preferences.rulerUnits = Units.PIXELS;/*************************************************************** 【概要】 アバターのパーツをトリミングして上書き保存するスクリプトです。  photoshop用です。  【使い方】 【1】トリミングしていないアバターのパーツをgitと同じ構成でフォルダに入れます。    (exportAvatar4ai.jsxをillustratorで使用すると自動的にそうなります。) 【2】photoshopを起動し、ファイル > スクリプト > 参照からこのjsxファイルを選択します。 【3】【1】で用意したディレクトリを選択します。 【4】自動的にトリミング→上書きされます。 【注意】 ※別ファイルで保存はなく上書き保存をしますので、 念のため元データのコピーをとって置く事をお勧めします。    ****************************************************************2013.12.20 IKOYAMA    **************************************************************/var rootFolder ;var rootFolder ;var rootFile;var trimed;//トリミングできたかどうかのbool値var fileList=[];//ここにpngファイルを全て格納するvar folder_orginal;var partsList_1=[{name_parts:'upperarm_r',x:179,y:236,width:125,height:161},{name_parts:'upperarm_l',x:327,y:212,width:117,height:201},{name_parts:'thigh_r',x:188,y:402,width:117,height:201},{name_parts:'thigh_l',x:280,y:401,width:117,height:201},{name_parts:'tail',x:200,y:415,width:217,height:211},{name_parts:'leg_r',x:179,y:499,width:117,height:201},{name_parts:'leg_l',x:301,y:493,width:117,height:211},{name_parts:'head',x:171,y:57,width:233,height:285},{name_parts:'hand_r',x:135,y:264,width:45,height:57},{name_parts:'hand_l',x:398,y:461,width:45,height:57},{name_parts:'hair',x:129,y:58,width:393,height:473},{name_parts:'forearm_r',x:118,y:285,width:125,height:161},{name_parts:'forearm_l',x:350,y:320,width:137,height:241},{name_parts:'foot_r',x:172,y:656,width:97,height:65},{name_parts:'foot_l',x:355,y:664,width:57,height:65},{name_parts:'face_angry',x:221,y:187,width:125,height:101},{name_parts:'face_normal',x:221,y:187,width:125,height:101},{name_parts:'body',x:159,y:255,width:285,height:351}];var partsList_2=[{name_parts:'upperarm_r',x:179,y:236,width:125,height:161},{name_parts:'upperarm_l',x:309,y:209,width:116,height:201},{name_parts:'thigh_r',x:199,y:402,width:117,height:201},{name_parts:'thigh_l',x:281,y:402,width:117,height:201},{name_parts:'tail',x:201,y:415,width:217,height:211},{name_parts:'leg_r',x:181,y:499,width:117,height:201},{name_parts:'leg_l',x:301,y:492,width:117,height:211},{name_parts:'head',x:171,y:57,width:233,height:285},{name_parts:'hand_r',x:136,y:274,width:45,height:57},{name_parts:'hand_l',x:392,y:462,width:44,height:57},{name_parts:'hair',x:129,y:58,width:393,height:473},{name_parts:'forearm_r',x:120,y:285,width:125,height:161},{name_parts:'forearm_l',x:341,y:319,width:136,height:241},{name_parts:'foot_r',x:173,y:655,width:97,height:65},{name_parts:'foot_l',x:355,y:665,width:57,height:65},{name_parts:'face_normal',x:219,y:187,width:125,height:101},{name_parts:'face_angry',x:219,y:187,width:125,height:101},{name_parts:'body',x:160,y:255,width:285,height:351}];/*******************************************/main();function main(){    alert("元ファイルの場所を選択してください");    folder_orginal = Folder.selectDialog();    getAllFiles(folder_orginal.getFiles());    for(var i = 0; i < fileList.length; i++){    //for(var i =0; i<1; i++){            resetVar();            open(fileList[i]);        settingVar();        if(doc.width == 600 && doc.height == 800){                    var obj = getType(doc.path);            trimDoc(obj);            if(trimed){                savePNG();            }        }        doc.close(SaveOptions.DONOTSAVECHANGES);    }}/*******************************************///ディレクトリを潜って全てのpngファイルを取得するfunction getAllFiles(_files){        var tempFileList = [];        var tempFolderList = [];                for(var i=0;i<_files.length;i++){            var path = String(_files[i]);            if(path.indexOf(".png")>0){                                fileList.push(_files[i]);            }else if(path.indexOf(".")<0){                tempFolderList.push(_files[i]);                            }        }        for(var i = 0; i<tempFolderList.length; i++){            folder_orginal = null;            getAllFiles(tempFolderList[i].getFiles());        }}//いろんな変数に値を突っ込むfunction settingVar(){    doc = activeDocument;    layers = activeDocument.layers;}//変数の値を取り除くfunction resetVar(){    doc = null;    layers = null;}//パスを受け取り{type:hoge,gender:1or2}のオブジェクトを返すfunction getType(_path){    var typeName;    var gen;    if(String(_path).indexOf("protector")==-1){//頭        var tempArr = String(_path).split("/");        typeName = tempArr[tempArr .length-1];        gen = doc.name.charAt(doc.name.length-5);    }else{//防具                typeName = doc.name.split(".")[0];                        var tempArr = String(_path).split("/");                tempStr = tempArr[tempArr.length-1];        gen = tempStr.charAt(tempStr.length-1);    }    return {type:typeName,gender:gen};}//画像をトリミングするfunction trimDoc(_obj){    //for(var i=0 ; i<layers.length; i++){    if(_obj.gender == 1||_obj.gender == 2){        if(_obj.gender == 1){            var partsList=partsList_1;            //alert("男");        }else{            var partsList=partsList_2;                                //alert("女");        }           for(var j=0; j<partsList.length; j++){                                         var name_test = (_obj.type == partsList[j].name_parts);            if(name_test){                var obj = partsList[j];                doc.resizeCanvas((doc.width-obj.x),(doc.height-obj.y),AnchorPosition.BOTTOMRIGHT);                doc.resizeCanvas(obj.width,obj.height,AnchorPosition.TOPLEFT);                                         trimed = true;                break;                           }else if(j == partsList.length-1){                alert(_obj.type+"は未定義のパーツです");                trimed = false;            }               }    }}//png24で上書き保存するfunction savePNG() {	var exp = new ExportOptionsSaveForWeb();	exp.format = SaveDocumentType.PNG;	exp.interlaced　= false;    exp.PNG8 = false;	var fileObj = new File(doc.path+"/"+doc.name);    //alert(fileObj);	activeDocument.exportDocument(fileObj, ExportType.SAVEFORWEB, exp);}