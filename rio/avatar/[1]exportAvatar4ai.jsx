/*****************************************************************【概要】アバターのaiから、アバターのパーツを書き出すスクリプトです。illustrator用です。【使い方】【1】アバターのデータは"アバターID.ai"にリネームし、1フォルダにまとめる。【2】illustratorを起動し、ファイル > スクリプト > その他のスクリプト から、このjsxを選択。【3】アバターデータの入っているディレクトリを選択すると、一斉に書き出される。【4】photoshopでリサイズし、gitにプッシュする。【オプション】・saveAllをfalseにするとアバター固有の顔・髪・頭のみ書き出しできます。【注意】・レイヤー名が間違っているとうまく動きません。・後頭部、尻尾がないアバターの場合、デフォルトのデータを必ず削除してから実行して下さい。****************************************************************2013.12.20 IKOYAMA2013.12.22 アバターIDの構造変更に基づき、一部変数の抽出方法変更*****************************************************************/var saveAll = true;//顔、髪、頭のみ書き出したいときはfalseにする。var doc;var layers;var activeLayer;var ID;var seriesID;var gender;var gunORsword;var rootFolder ;var options = new ExportOptionsPNG24();    options.antiAliasing = true;    options.transparency = true;    options.artBoardClipping = true;    options.verticalScale = 100;    options.horizontalScale = 100;    var nameObj = [    {jap:"顔", eng:"face_normal", type:"other"},    {jap:"頭", eng:"head", type:"other"},        {jap:"後頭部", eng:"hair", type:"other"},        {jap:"すね_L", eng:"leg_l", type:"protector"},    {jap:"すね_R", eng:"leg_r", type:"protector"},    {jap:"もも_L", eng:"thigh_l", type:"protector"},    {jap:"もも_R", eng:"thigh_r", type:"protector"},    {jap:"手の甲_L", eng:"hand_l", type:"protector"},    {jap:"手の甲_R", eng:"hand_r", type:"protector"},    {jap:"尻尾", eng:"tail", type:"protector"},    {jap:"足の甲_L", eng:"foot_l", type:"protector"},    {jap:"足の甲_R", eng:"foot_r", type:"protector"},    {jap:"胴体", eng:"body", type:"protector"},    {jap:"二の腕_L", eng:"upperarm_l", type:"protector"},    {jap:"二の腕_R", eng:"upperarm_r", type:"protector"},    {jap:"腕_L", eng:"forearm_l", type:"protector"},    {jap:"腕_R", eng:"forearm_r", type:"protector"}];/********************************************************/main();function main(){    //alert("アバターのaiデータが入っているフォルダを選択してください");    rootFolder = Folder.selectDialog("フォルダ選択");    var fileList = new Array;    fileList = rootFolder.getFiles("*.ai");    for(var i=0; i<fileList.length; i++){    //for(var i=0; i<1; i++){            open(fileList[i]);        settingVar();                for(var j=0; j<layers.length; j++){        //for(var j=0; j<1; j++){            pickLayer(layers[j]);            saveFile();                    }        doc.close(SaveOptions.DONOTSAVECHANGES);        resetVar();    }}/********************************************************///いろんな変数に値を突っ込むfunction settingVar(){    doc = activeDocument;    layers = activeDocument.layers;    ID = doc.name.split(".")[0];        seriesID = ID.slice(0,4);    gender = ID.slice(-1);            var tempGoS = ID.slice(4,6);    if(tempGoS=="10"||tempGoS=="11"||tempGoS=="12"){       gunORsword = "gun";    }else{       gunORsword = "sword";    }    //alert("seriesID"+seriesID+"、gender "+gender +"、gunORsword"+gunORsword);}function resetVar(){    doc = null;    layers = null;    ID = null;    seriesID = null;    gender  = null;    gunORsword = null;}//レイヤーを一枚だけ表示するfunction pickLayer(_layer){    activeLayer = _layer;    vanishLayers();    activeLayer .visible = true;}//全レイヤーを非表示にfunction vanishLayers(){    for(var i=0; i<layers.length; i++){        layers[i].visible = false;    }    }//保存するfunction saveFile(){    var obj = convertName(activeLayer.name);//nameObjから該当のオブジェクトを取得    var savePath;    var saveFile;    var saveFolder ;    if(obj){        if(obj.type == "protector" && saveAll){            savePath = String(rootFolder + "/protector/" + seriesID + "_" + gunORsword + "_" + gender);            saveFile = new File(savePath +"/"+obj.eng+".png");             saveFolder = new Folder(savePath);            saveFolder.create();            doc.exportFile(saveFile,ExportType.PNG24,options);           }else if(obj.type == "other"){            savePath = String(rootFolder + "/"+obj.eng);            saveFile = new File(savePath+"/"+ID+".png");             saveFolder = new Folder(savePath);            saveFolder.create();            doc.exportFile(saveFile,ExportType.PNG24,options);           }                              }}//レイヤー名を受け取って該当のnameObjを返すfunction convertName(_name){    for(var i=0; i<nameObj.length; i++ ){        if(_name == nameObj[i].jap){            return nameObj[i];                        break;         }    }    return false;}